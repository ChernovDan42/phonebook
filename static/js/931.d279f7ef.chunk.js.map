{"version":3,"file":"static/js/931.d279f7ef.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","redux/filter/selectors.js","components/helpers/js/searchName.js","components/Contacts/ContactForm/ContactForm.jsx","components/Contacts/ContactsFilter/ContactsFilter.jsx","webpack://react phoneBook/./src/components/Modal/Modal.module.css?28d7","components/Modal/Modal.jsx","components/Contacts/ContactsList/ContactItem.jsx","components/Contacts/ContactsList/ContactsList.jsx","components/Pages/Contacts.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\nimport { getFilterValue } from 'redux/filter/selectors';\n\nexport const getContacts = state => state.contacts.contacts;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\nexport const selectVisibleContacts = createSelector(\n  [getContacts, getFilterValue],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","export const getFilterValue = state => state.filter;\n","export const searchName = (state, obj) => {\n  return state.find(\n    contact => contact.name.toLowerCase() === obj.name.toLowerCase()\n  );\n};\n","import { addContact } from 'redux/contacts/contactsOperations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts, getIsLoading } from 'redux/contacts/selectors';\nimport {\n  Box,\n  Button,\n  FormControl,\n  FormLabel,\n  Input,\n  VStack,\n  Heading,\n  useColorModeValue,\n} from '@chakra-ui/react';\nimport { useFormik } from 'formik';\nimport { searchName } from 'components/helpers/js/searchName';\nimport toast from 'react-hot-toast';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const IsLoading = useSelector(getIsLoading);\n  const contacts = useSelector(getContacts);\n\n  const border = useColorModeValue('1px solid #805AD5', '1px solid white');\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      number: '',\n    },\n    onSubmit: async values => {\n      if (searchName(contacts, values)) {\n        return toast.error(`${values.name} is already in contacts`);\n      }\n\n      dispatch(addContact(values));\n      resetForm();\n    },\n  });\n\n  const resetForm = () => {\n    formik.resetForm();\n  };\n\n  return (\n    <>\n      <Heading>PhoneBook</Heading>\n\n      <Box bg=\"dark\" p={6} rounded=\"lg\" w={500} border={border} mt={5}>\n        <form onSubmit={formik.handleSubmit}>\n          <VStack spacing={4} align=\"flex-start\">\n            <FormControl>\n              <FormLabel htmlFor=\"name\">Name</FormLabel>\n              <Input\n                onChange={formik.handleChange}\n                value={formik.values.name}\n                id=\"name\"\n                name=\"name\"\n                type=\"text\"\n                variant=\"filled\"\n                border=\"1px solid white\"\n                _focus={{ border: '1px solid #d5a6bd' }}\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                required\n              />\n            </FormControl>\n            <FormControl>\n              <FormLabel htmlFor=\"number\">Phone Number</FormLabel>\n\n              <Input\n                onChange={formik.handleChange}\n                value={formik.values.number}\n                id=\"number\"\n                name=\"number\"\n                type=\"tel\"\n                variant=\"filled\"\n                border=\"1px solid white \"\n                _focus={{ border: '1px solid #d5a6bd' }}\n                minLength=\"10\"\n                maxLength=\"13\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n                required\n              />\n            </FormControl>\n\n            <Button\n              type=\"submit\"\n              colorScheme=\"purple\"\n              width=\"full\"\n              disabled={IsLoading}\n            >\n              Add Contact\n            </Button>\n          </VStack>\n        </form>\n      </Box>\n    </>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { filterChange } from 'redux/filter/filterSlice';\nimport { FormControl, FormLabel, Input, Icon, Box } from '@chakra-ui/react';\nimport { RiUserSearchLine } from 'react-icons/ri';\n\nexport const ContactsFilter = () => {\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const value = e.target.value;\n    dispatch(filterChange(value.trim()));\n  };\n\n  return (\n    <FormControl display=\"flex\" alignItems=\"baseline\" mt={5}>\n      <FormLabel htmlFor=\"searchContact\" fontSize={20}>\n        Find contact\n      </FormLabel>\n      <Box position=\"relative\">\n        <Input\n          id=\"searchContact\"\n          type=\"text\"\n          autoComplete=\"off\"\n          onChange={handleChange}\n          w={377}\n          _focus={{ border: '1px solid #d5a6bd' }}\n        />\n        <Icon\n          as={RiUserSearchLine}\n          position=\"absolute\"\n          right={1}\n          top={'20%'}\n          boxSize=\"24px\"\n        />\n      </Box>\n    </FormControl>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"Overlay\":\"Modal_Overlay__yoxbg\",\"modal\":\"Modal_modal__DJDMv\"};","import css from './Modal.module.css';\nimport { createPortal } from 'react-dom';\nimport { useEffect } from 'react';\nimport {\n  Box,\n  Button,\n  FormControl,\n  FormLabel,\n  Input,\n  VStack,\n} from '@chakra-ui/react';\nimport { useFormik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { editContact } from 'redux/contacts/contactsOperations';\nimport { IconButton, Icon } from '@chakra-ui/react';\nimport { CloseIcon } from '@chakra-ui/icons';\nimport PropTypes from 'prop-types';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport function Modal({ onClose, name, number, id }) {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeydown);\n    return () => {\n      window.removeEventListener('keydown', handleKeydown);\n    };\n  });\n\n  const handleKeydown = e => {\n    if (e.code === 'Escape') {\n      onClose();\n    }\n  };\n\n  const handleBackdropClick = e => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      name: name,\n      number: number,\n    },\n    onSubmit: values => {\n      if (values.name === name && values.number === number) {\n        return;\n      }\n      dispatch(editContact({ id, values }));\n      onClose();\n    },\n  });\n\n  return createPortal(\n    <div className={css.Overlay} onClick={handleBackdropClick}>\n      <Box\n        bg=\"dark\"\n        p={6}\n        rounded=\"lg\"\n        w={500}\n        border=\"1px solid white\"\n        position={'relative'}\n      >\n        <IconButton\n          role=\"group\"\n          size={'sm'}\n          position=\"absolute\"\n          right={2}\n          top={2}\n          onClick={onClose}\n        >\n          <Icon\n            as={CloseIcon}\n            _groupHover={{\n              transform: 'rotate(90deg)',\n              transition: 'transform 0.5s',\n            }}\n          />\n        </IconButton>\n        <form onSubmit={formik.handleSubmit}>\n          <VStack spacing={4} align=\"flex-start\">\n            <FormControl>\n              <FormLabel htmlFor=\"name\">Name</FormLabel>\n              <Input\n                onChange={formik.handleChange}\n                value={formik.values.name}\n                id=\"name\"\n                name=\"name\"\n                type=\"text\"\n                variant=\"filled\"\n                border=\"1px solid white \"\n                _focus={{ border: '1px solid #d5a6bd', color: 'white' }}\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                required\n              />\n            </FormControl>\n            <FormControl>\n              <FormLabel htmlFor=\"number\">Phone Number</FormLabel>\n              <Input\n                onChange={formik.handleChange}\n                value={formik.values.number}\n                id=\"number\"\n                name=\"number\"\n                type=\"tel\"\n                variant=\"filled\"\n                border=\"1px solid white \"\n                _focus={{ border: '1px solid #d5a6bd', color: 'white' }}\n                required\n                minLength=\"10\"\n                maxLength=\"13\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n              />\n            </FormControl>\n\n            <Button type=\"submit\" colorScheme=\"purple\" width=\"full\">\n              Edit\n            </Button>\n          </VStack>\n        </form>\n      </Box>\n    </div>,\n    modalRoot\n  );\n}\nModal.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n  onClose: PropTypes.func,\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contactsOperations';\nimport {\n  ListItem,\n  Text,\n  Box,\n  IconButton,\n  useColorModeValue,\n} from '@chakra-ui/react';\nimport { DeleteIcon, EditIcon } from '@chakra-ui/icons';\n\nimport PropTypes from 'prop-types';\nimport { getIsLoading } from 'redux/contacts/selectors';\nimport { useState } from 'react';\nimport { Modal } from 'components/Modal/Modal';\n\nexport const ContactItem = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n  const IsLoading = useSelector(getIsLoading);\n  const [showModal, setShowModal] = useState(false);\n\n  const border = useColorModeValue('1px solid purple', '1px solid  #D6BCFA');\n\n  const toggleModal = () => setShowModal(state => !state);\n\n  const handleDelete = id => {\n    dispatch(deleteContact(id));\n  };\n  return (\n    <>\n      <ListItem\n        mt={4}\n        borderBottom={border}\n        display={'flex'}\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        w=\"600px\"\n        mr=\"10px\"\n      >\n        <Text fontSize={'lg'}>\n          {name}: {number}\n        </Text>\n        <Box>\n          <IconButton\n            mr={5}\n            border={'none'}\n            colorScheme=\"purple\"\n            aria-label=\"Delete Contact\"\n            size=\"md\"\n            icon={<DeleteIcon />}\n            onClick={() => handleDelete(id)}\n            variant=\"outline\"\n            disabled={IsLoading}\n          />\n          <IconButton\n            border={'none'}\n            colorScheme=\"purple\"\n            aria-label=\"Edit Contact\"\n            size=\"md\"\n            icon={<EditIcon />}\n            onClick={toggleModal}\n            variant=\"outline\"\n            disabled={IsLoading}\n          />\n        </Box>\n      </ListItem>\n      {showModal && (\n        <Modal onClose={toggleModal} name={name} number={number} id={id} />\n      )}\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  optionalObjectWithShape: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.number.isRequired,\n    id: PropTypes.string.isRequired,\n  }),\n};\n","import { useSelector } from 'react-redux';\nimport { getIsLoading, selectVisibleContacts } from 'redux/contacts/selectors';\nimport { ContactItem } from './ContactItem';\n\nimport { List } from '@chakra-ui/react';\n\nimport { Loader } from 'components/helpers/Loader/Loader';\n\nexport const ContactsList = () => {\n  const IsLoading = useSelector(getIsLoading);\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <List\n      mt={7}\n      display=\"flex\"\n      flexDirection={'column-reverse'}\n      justifyContent={'flex-end'}\n      h=\"300px\"\n    >\n      {IsLoading && <Loader />}\n      {visibleContacts.map(({ number, id, name }) => {\n        return <ContactItem key={id} name={name} number={number} id={id} />;\n      })}\n    </List>\n  );\n};\n","import { Box } from '@chakra-ui/react';\nimport { ContactForm } from 'components/Contacts/ContactForm/ContactForm';\nimport { ContactsFilter } from 'components/Contacts/ContactsFilter/ContactsFilter';\nimport { ContactsList } from 'components/Contacts/ContactsList/ContactsList';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectIsLoggedIn } from 'redux/auth/selectors';\nimport { fetchContacts } from 'redux/contacts/contactsOperations';\nimport { Toaster } from 'react-hot-toast';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <Box padding=\"20px 30px\">\n      <ContactForm />\n\n      <ContactsFilter />\n      {isLoggedIn && <ContactsList />}\n\n      <Toaster position=\"top-right\" />\n    </Box>\n  );\n};\n\nexport default Contacts;\n"],"names":["getContacts","state","contacts","getIsLoading","isLoading","selectVisibleContacts","createSelector","filter","contact","name","toLowerCase","includes","searchName","obj","find","ContactForm","dispatch","useDispatch","IsLoading","useSelector","border","useColorModeValue","formik","useFormik","initialValues","number","onSubmit","values","toast","addContact","resetForm","bg","p","rounded","w","mt","handleSubmit","spacing","align","htmlFor","I","onChange","handleChange","value","id","type","variant","_focus","pattern","title","required","minLength","maxLength","colorScheme","width","disabled","ContactsFilter","display","alignItems","fontSize","position","autoComplete","e","target","filterChange","trim","as","RiUserSearchLine","right","top","boxSize","modalRoot","document","querySelector","Modal","onClose","useEffect","window","addEventListener","handleKeydown","removeEventListener","code","editContact","createPortal","className","css","onClick","currentTarget","role","size","CloseIcon","_groupHover","transform","transition","color","ContactItem","useState","showModal","setShowModal","toggleModal","borderBottom","justifyContent","mr","icon","deleteContact","handleDelete","ContactsList","visibleContacts","flexDirection","h","Loader","map","isLoggedIn","selectIsLoggedIn","fetchContacts","padding"],"sourceRoot":""}